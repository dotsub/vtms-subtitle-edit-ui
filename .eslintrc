{
    "env": {
        "browser": true
    },
    "extends": [
      "plugin:@typescript-eslint/recommended",
      "plugin:react/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "@typescript-eslint/tslint",
        "react-hooks"
    ],
    "rules": {
        "@typescript-eslint/ban-ts-ignore": "off",
        "quotes": ["error", "double"],
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "max-len": ["error", { "code": 120 }],
        "semi": ["error", "always"],
        "jsx-quotes": ["error", "prefer-double"],
        "object-curly-spacing": ["error", "always", { "objectsInObjects": false, "arraysInObjects": false }],
        "react/jsx-boolean-value": "error",
        "react/jsx-child-element-spacing": "error",
        "react/jsx-closing-bracket-location": "error",
        "react/jsx-closing-tag-location": "error",
        "react/jsx-curly-newline": "error",
        "react/jsx-curly-spacing": "error",
        "react/jsx-equals-spacing": "error",
        "react/jsx-first-prop-new-line": "error",
        "react/jsx-indent": "error",
        "react/jsx-indent-props": "error",
        "react/jsx-max-props-per-line": ["error", { "maximum": 1, "when": "multiline" }],
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-fragments": "error",
        "react/jsx-props-no-multi-spaces": "error",
        "react/jsx-tag-spacing": "error",
        "react/jsx-wrap-multilines": "error",

        // No longer needed because of new JSX transform
        // https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html
        "react/jsx-uses-react": "off",
        "react/react-in-jsx-scope": "off",

        "@typescript-eslint/ban-ts-comment": "off",
        // TODO: Review disabled types below to eventually better type system
        "@typescript-eslint/ban-types": ["error",
            {
                "types": {
                    "Function": false,
                    "object": false,
                    "Object": false,
                    "{}": false
                },
                "extendDefaults": true
            }
        ]
    },
    "settings": {
      "react": {
        "pragma": "React",
        "version": "detect"
      }
    }
}
